{# --- Options Setup --- #}
{% set options = paginationOptions | default({}) %}
{% set listId = options.id | default("pagination") %}
{% set listNavLabel = options.navLabel | default("Pagination Navigation") %}
{% set listHeadingText = options.headingText | default("Pagination") %}
{% set prevText = options.prevText | default("Previous") %}
{% set nextText = options.nextText | default("Next") %}
{% set pageItemLabel = options.pageItemLabel | default("Go to page") %}
{% set anchor = options.anchor | default("") %}

{# --- Pagination Data --- #}
{% set currentPage = pagination.pageNumber %} {# 0-indexed current page #}
{% set totalPages = pagination.pages.length %}
{% set pageHrefs = pagination.hrefs %}

{% include partials.paginationList %}

{# Only render if there are multiple pages #}
{% if totalPages > 1 %}
<nav aria-label="{{ listNavLabel }}" class="pagination-nav mt-8 mb-4 text-[var(--os-text)]">
    <h2 id="{{ listId }}-heading" class="sr-only">{{ listHeadingText }}</h2>
    {# Removed outer border and bg from ol, will apply to nav or a wrapper if needed for distinct panel look #}
    <ol class="pagination-list flex justify-center items-center space-x-1" aria-labelledby="{{ listId }}-heading">
        {# Previous Link #}
        <li class="pagination-item pagination-item--prev{% if not pagination.href.previous %} pagination-item--disabled opacity-50 pointer-events-none{% endif %}">
            <a {% if pagination.href.previous %} href="{{ pagination.href.previous }}{{ anchor }}" {% else %} aria-disabled="true" {% endif %} class="pagination-link button" rel="prev">{{ prevText }}</a>
        </li>

        {% set lastPageShown = -1 %} {# Used to determine when to show an ellipsis #}
        {% for i in range(0, totalPages) %}
            {% set pageNumToDisplay = i + 1 %}
            {% set isCurrentPage = (i == currentPage) %}

            {# Determine if this page number should be displayed
                Show page if it's:
                1. The first page (i == 0)
                2. The last page (i == totalPages - 1)
                3. The current page or its immediate neighbors (i >= currentPage - 1 and i <= currentPage + 1)
            #}
            {% set showPage = (
                i == 0 or
                i == totalPages - 1 or
                (i >= currentPage - 1 and i <= currentPage + 1)
            ) %}

            {% if showPage %}
                {# If there was a gap since the last shown page number, print an ellipsis #}
                {% if lastPageShown != -1 and i > lastPageShown + 1 %}
                    <li class="pagination-item pagination-item--ellipsis px-3 py-2 text-[var(--os-text)]" aria-hidden="true">&hellip;</li> {# Standard HTML entity for ellipsis #}
                {% endif %}

                <li class="pagination-item pagination-item--number">
                    {% if isCurrentPage %}
                        <span class="pagination-link button bg-[var(--os-accent-bg)] text-[var(--os-bg)] border-[var(--os-accent-bg)] pointer-events-none" aria-current="page" aria-label="{{ pageItemLabel }} {{ pageNumToDisplay }} (current page)">{{ pageNumToDisplay }}</span>
                    {% else %}
                        <a href="{{ pageHrefs[i] }}{{ anchor }}" class="pagination-link button"
                           aria-label="{{ pageItemLabel }} {{ pageNumToDisplay }}">{{ pageNumToDisplay }}</a>
                    {% endif %}
                </li>
                {% set lastPageShown = i %} {# Update the last page number that was actually rendered #}
            {% endif %}
        {% endfor %}

        {# Next Link #}
        <li class="pagination-item pagination-item--next{% if not pagination.href.next %} pagination-item--disabled opacity-50 pointer-events-none{% endif %}">
            <a {% if pagination.href.next %}href="{{ pagination.href.next }}{{ anchor }}"{% else %} aria-disabled="true" {% endif %} class="pagination-link button" rel="next">{{ nextText }}</a>
        </li>
    </ol>
</nav>
{% endif %}